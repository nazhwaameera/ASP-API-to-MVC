@model MyWebFormApp.BLL.DTOs.UserDTO

@{
    ViewData["Title"] = "Edit";
}

<h1>Add Roles</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" value="@Model.Username"/>
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="FirstName" value="@Model.FirstName" />
            <input type="hidden" asp-for="LastName" value="@Model.LastName" />
            <input type="hidden" asp-for="Address" value="@Model.Address" />
            <input type="hidden" asp-for="Email" value="@Model.Email" />
            <input type="hidden" asp-for="Telp" value="@Model.Telp" />

            <div class="form-group">
                <label asp-for="Roles" class="control-label"></label>
                <select name="RoleID" asp-for="Roles" class="form-control">
                    <option value="">Select Role</option>
                    @foreach (var item in ViewBag.DropdownData)
                    {
                        // Check if the role is not already assigned to the user
                        if (!Model.Roles.Any(r => r.RoleID == item.RoleID))
                        {
                            <option value="@item.RoleID">@item.RoleName</option>
                        }
                    }
                </select>
                <span asp-validation-for="Roles" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
